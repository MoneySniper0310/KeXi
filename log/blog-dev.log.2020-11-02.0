2020-11-02 21:03:00.184  INFO 14836 --- [restartedMain] com.wjh.blog.BlogApplication             : Starting BlogApplication on DESKTOP-JC6BHN3 with PID 14836 (D:\IntelliJ_proj\blog\target\classes started by T500 in D:\IntelliJ_proj\blog)
2020-11-02 21:03:01.032 DEBUG 14836 --- [restartedMain] com.wjh.blog.BlogApplication             : Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2020-11-02 21:03:01.033  INFO 14836 --- [restartedMain] com.wjh.blog.BlogApplication             : The following profiles are active: dev
2020-11-02 21:03:01.084  INFO 14836 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-11-02 21:03:01.100  INFO 14836 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-11-02 21:03:07.375  INFO 14836 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-11-02 21:03:07.432  INFO 14836 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-11-02 21:03:07.433  INFO 14836 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.38]
2020-11-02 21:03:07.734  INFO 14836 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-11-02 21:03:07.735  INFO 14836 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 6635 ms
2020-11-02 21:03:09.533  INFO 14836 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-11-02 21:03:09.695  INFO 14836 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-11-02 21:03:10.357  INFO 14836 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-11-02 21:03:10.396  INFO 14836 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-11-02 21:03:10.407  INFO 14836 --- [restartedMain] com.wjh.blog.BlogApplication             : Started BlogApplication in 15.306 seconds (JVM running for 21.702)
2020-11-02 21:03:10.515  INFO 14836 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-02 21:03:10.517  INFO 14836 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-11-02 21:03:10.543  INFO 14836 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 26 ms
2020-11-02 21:03:10.598  INFO 14836 --- [http-nio-8080-exec-1] com.wjh.blog.aspect.LogAspect            : Request : {url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.wjh.blog.controller.indexController.index', args=[{}, 1]}
2020-11-02 21:03:10.598  INFO 14836 --- [http-nio-8080-exec-2] com.wjh.blog.aspect.LogAspect            : Request : {url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.wjh.blog.controller.indexController.index', args=[{}, 1]}
2020-11-02 21:03:10.647  INFO 14836 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-11-02 21:03:13.610  INFO 14836 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-11-02 21:03:13.720 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_blog b, blog.t_type t, blog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2020-11-02 21:03:13.720 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_blog b, blog.t_type t, blog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2020-11-02 21:03:13.751 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==> Parameters: 
2020-11-02 21:03:13.751 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==> Parameters: 
2020-11-02 21:03:14.540 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.B.getAllFirstPageBlog_COUNT      : <==      Total: 1
2020-11-02 21:03:14.540 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.B.getAllFirstPageBlog_COUNT      : <==      Total: 1
2020-11-02 21:03:14.551 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.t_blog b, blog.t_type t,blog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2020-11-02 21:03:14.551 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.t_blog b, blog.t_type t,blog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2020-11-02 21:03:14.553 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==> Parameters: 5(Integer)
2020-11-02 21:03:14.553 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==> Parameters: 5(Integer)
2020-11-02 21:03:14.597 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.BlogMapper.getAllFirstPageBlog   : <==      Total: 5
2020-11-02 21:03:14.597 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.BlogMapper.getAllFirstPageBlog   : <==      Total: 5
2020-11-02 21:03:14.609 DEBUG 14836 --- [http-nio-8080-exec-2] c.wjh.blog.mapper.TypeMapper.getAllType  : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from blog.t_type t,blog.t_blog b where t.id = b.type_id 
2020-11-02 21:03:14.610 DEBUG 14836 --- [http-nio-8080-exec-2] c.wjh.blog.mapper.TypeMapper.getAllType  : ==> Parameters: 
2020-11-02 21:03:14.610 DEBUG 14836 --- [http-nio-8080-exec-1] c.wjh.blog.mapper.TypeMapper.getAllType  : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from blog.t_type t,blog.t_blog b where t.id = b.type_id 
2020-11-02 21:03:14.611 DEBUG 14836 --- [http-nio-8080-exec-1] c.wjh.blog.mapper.TypeMapper.getAllType  : ==> Parameters: 
2020-11-02 21:03:14.619 DEBUG 14836 --- [http-nio-8080-exec-1] c.wjh.blog.mapper.TypeMapper.getAllType  : <==      Total: 11
2020-11-02 21:03:14.619 DEBUG 14836 --- [http-nio-8080-exec-2] c.wjh.blog.mapper.TypeMapper.getAllType  : <==      Total: 11
2020-11-02 21:03:14.625 DEBUG 14836 --- [http-nio-8080-exec-2] com.wjh.blog.mapper.TagMapper.getAllTag  : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from blog.t_tag t,blog.t_blog b, blog.t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2020-11-02 21:03:14.625 DEBUG 14836 --- [http-nio-8080-exec-1] com.wjh.blog.mapper.TagMapper.getAllTag  : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from blog.t_tag t,blog.t_blog b, blog.t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2020-11-02 21:03:14.626 DEBUG 14836 --- [http-nio-8080-exec-2] com.wjh.blog.mapper.TagMapper.getAllTag  : ==> Parameters: 
2020-11-02 21:03:14.626 DEBUG 14836 --- [http-nio-8080-exec-1] com.wjh.blog.mapper.TagMapper.getAllTag  : ==> Parameters: 
2020-11-02 21:03:14.702 DEBUG 14836 --- [http-nio-8080-exec-2] com.wjh.blog.mapper.TagMapper.getAllTag  : <==      Total: 17
2020-11-02 21:03:14.702 DEBUG 14836 --- [http-nio-8080-exec-1] com.wjh.blog.mapper.TagMapper.getAllTag  : <==      Total: 17
2020-11-02 21:03:14.704 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.BlogMapper.getRecommendedBlog    : ==>  Preparing: select id,title,recommend from blog.t_blog where recommend = true; 
2020-11-02 21:03:14.704 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.BlogMapper.getRecommendedBlog    : ==>  Preparing: select id,title,recommend from blog.t_blog where recommend = true; 
2020-11-02 21:03:14.704 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.BlogMapper.getRecommendedBlog    : ==> Parameters: 
2020-11-02 21:03:14.704 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.BlogMapper.getRecommendedBlog    : ==> Parameters: 
2020-11-02 21:03:14.708 DEBUG 14836 --- [http-nio-8080-exec-1] c.w.b.m.BlogMapper.getRecommendedBlog    : <==      Total: 11
2020-11-02 21:03:14.708 DEBUG 14836 --- [http-nio-8080-exec-2] c.w.b.m.BlogMapper.getRecommendedBlog    : <==      Total: 11
2020-11-02 21:03:14.711  INFO 14836 --- [http-nio-8080-exec-2] com.wjh.blog.aspect.LogAspect            : Result : index
2020-11-02 21:03:14.711  INFO 14836 --- [http-nio-8080-exec-1] com.wjh.blog.aspect.LogAspect            : Result : index
2020-11-02 21:03:14.712  INFO 14836 --- [http-nio-8080-exec-2] com.wjh.blog.aspect.LogAspect            : --------doAfterReturning--------
2020-11-02 21:03:14.712  INFO 14836 --- [http-nio-8080-exec-1] com.wjh.blog.aspect.LogAspect            : --------doAfterReturning--------
2020-11-02 21:03:14.712  INFO 14836 --- [http-nio-8080-exec-1] com.wjh.blog.aspect.LogAspect            : --------doAfter--------
2020-11-02 21:03:14.712  INFO 14836 --- [http-nio-8080-exec-2] com.wjh.blog.aspect.LogAspect            : --------doAfter--------
2020-11-02 21:03:59.215  WARN 14836 --- [http-nio-8080-exec-3] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [1,215] milliseconds.
2020-11-02 21:03:59.221 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.U.findByUsernameAndPassword      : ==>  Preparing: SELECT * FROM t_user WHERE username=? AND password=? 
2020-11-02 21:03:59.221 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.U.findByUsernameAndPassword      : ==> Parameters: wangjinghao(String), e10adc3949ba59abbe56e057f20f883e(String)
2020-11-02 21:03:59.323 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.U.findByUsernameAndPassword      : <==      Total: 1
2020-11-02 21:04:11.156 DEBUG 14836 --- [http-nio-8080-exec-4] c.w.b.m.B.getAllBlogQuery_COUNT          : ==>  Preparing: SELECT count(0) FROM blog.t_blog b LEFT OUTER JOIN blog.t_type t ON b.type_id = t.id 
2020-11-02 21:04:11.158 DEBUG 14836 --- [http-nio-8080-exec-4] c.w.b.m.B.getAllBlogQuery_COUNT          : ==> Parameters: 
2020-11-02 21:04:11.195 DEBUG 14836 --- [http-nio-8080-exec-4] c.w.b.m.B.getAllBlogQuery_COUNT          : <==      Total: 1
2020-11-02 21:04:11.195 DEBUG 14836 --- [http-nio-8080-exec-4] c.w.b.mapper.BlogMapper.getAllBlogQuery  : ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.type_id,t.id,t.name from blog.t_blog b left outer join blog.t_type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-11-02 21:04:11.195 DEBUG 14836 --- [http-nio-8080-exec-4] c.w.b.mapper.BlogMapper.getAllBlogQuery  : ==> Parameters: 5(Integer)
2020-11-02 21:04:11.204 DEBUG 14836 --- [http-nio-8080-exec-4] c.w.b.mapper.BlogMapper.getAllBlogQuery  : <==      Total: 5
2020-11-02 21:04:11.206 DEBUG 14836 --- [http-nio-8080-exec-4] com.wjh.blog.mapper.TypeMapper.listType  : ==>  Preparing: select * from t_type 
2020-11-02 21:04:11.207 DEBUG 14836 --- [http-nio-8080-exec-4] com.wjh.blog.mapper.TypeMapper.listType  : ==> Parameters: 
2020-11-02 21:04:11.232 DEBUG 14836 --- [http-nio-8080-exec-4] com.wjh.blog.mapper.TypeMapper.listType  : <==      Total: 6
2020-11-02 21:04:11.234 DEBUG 14836 --- [http-nio-8080-exec-4] com.wjh.blog.mapper.TagMapper.listTag    : ==>  Preparing: select * from t_tag 
2020-11-02 21:04:11.234 DEBUG 14836 --- [http-nio-8080-exec-4] com.wjh.blog.mapper.TagMapper.listTag    : ==> Parameters: 
2020-11-02 21:04:11.236 DEBUG 14836 --- [http-nio-8080-exec-4] com.wjh.blog.mapper.TagMapper.listTag    : <==      Total: 8
2020-11-02 21:04:13.599 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TypeMapper.listType  : ==>  Preparing: select * from t_type 
2020-11-02 21:04:13.600 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TypeMapper.listType  : ==> Parameters: 
2020-11-02 21:04:13.604 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TypeMapper.listType  : <==      Total: 6
2020-11-02 21:04:13.610 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TagMapper.listTag    : ==>  Preparing: select * from t_tag 
2020-11-02 21:04:13.612 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TagMapper.listTag    : ==> Parameters: 
2020-11-02 21:04:13.616 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TagMapper.listTag    : <==      Total: 8
2020-11-02 21:07:05.231 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TypeMapper.getType   : ==>  Preparing: SELECT * FROM t_type WHERE id=? 
2020-11-02 21:07:05.231 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TypeMapper.getType   : ==> Parameters: 3(Long)
2020-11-02 21:07:05.269 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TypeMapper.getType   : <==      Total: 1
2020-11-02 21:07:05.271 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TagMapper.getTag     : ==>  Preparing: select * from blog.t_tag where id = ? 
2020-11-02 21:07:05.272 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TagMapper.getTag     : ==> Parameters: 5(Long)
2020-11-02 21:07:05.273 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.TagMapper.getTag     : <==      Total: 1
2020-11-02 21:07:05.274 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.BlogMapper.saveBlog  : ==>  Preparing: insert into blog.t_blog (id,title, content, first_picture, flag, views, appreciation, share_statement, commentabled,published, recommend, create_time, update_time, type_id,tag_ids, user_id, description) values (?,?,?,?,?,?,?, ?,?,?,?,?, ?,?,?,?,?); 
2020-11-02 21:07:05.277 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.BlogMapper.saveBlog  : ==> Parameters: null, TCP连接和断开(String), ![](http://hi.csdn.net/attachment/201108/7/0_131271823564Rx.gif)

### 三次握手:
**第一次握手：建立连接时，客户端发送syn包（syn=x）到服务器，并进入SYN_SENT状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。

第二次握手：服务器收到syn包，必须确认客户的SYN（ack=x+1），同时自己也发送一个SYN包（syn=y），即SYN+ACK包，此时服务器进入SYN_RECV状态；

第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=y+1），此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。**

### 四次挥手
1）客户端进程发出连接释放报文，并且停止发送数据。释放数据报文首部，FIN=1，其序列号为seq=u（等于前面已经传送过来的数据的最后一个字节的序号加1），此时，客户端进入FIN-WAIT-1（终止等待1）状态。 TCP规定，FIN报文段即使不携带数据，也要消耗一个序号。
2）服务器收到连接释放报文，发出确认报文，ACK=1，ack=u+1，并且带上自己的序列号seq=v，此时，服务端就进入了CLOSE-WAIT（关闭等待）状态。TCP服务器通知高层的应用进程，客户端向服务器的方向就释放了，这时候处于半关闭状态，即客户端已经没有数据要发送了，但是服务器若发送数据，客户端依然要接受。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。
3）客户端收到服务器的确认请求后，此时，客户端就进入FIN-WAIT-2（终止等待2）状态，等待服务器发送连接释放报文（在这之前还需要接受服务器发送的最后的数据）。
4）服务器将最后的数据发送完毕后，就向客户端发送连接释放报文，FIN=1，ack=u+1，由于在半关闭状态，服务器很可能又发送了一些数据，假定此时的序列号为seq=w，此时，服务器就进入了LAST-ACK（最后确认）状态，等待客户端的确认。
5）客户端收到服务器的连接释放报文后，必须发出确认，ACK=1，ack=w+1，而自己的序列号是seq=u+1，此时，客户端就进入了TIME-WAIT（时间等待）状态。注意此时TCP连接还没有释放，必须经过2∗∗MSL（最长报文段寿命）的时间后，当客户端撤销相应的TCB后，才进入CLOSED状态。
6）服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。


#### 常见面试题
【问题1】为什么连接的时候是三次握手，关闭的时候却是四次握手？

答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，"你发的FIN报文我收到了"。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。

【问题2】为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？

答：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假象网络是不可靠的，有可以最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。在Client发送出最后的ACK回复，但该ACK可能丢失。Server如果没有收到ACK，将不断重复发送FIN片段。所以Client不能立即关闭，它必须确认Server接收到了该ACK。Client会在发送出ACK之后进入到TIME_WAIT状态。Client会设置一个计时器，等待2MSL的时间。如果在该时间内再次收到FIN，那么Client会重发ACK并再次等待2MSL。所谓的2MSL是两倍的MSL(Maximum Segment Lifetime)。MSL指一个片段在网络中最大的存活时间，2MSL就是一个发送和一个回复所需的最大时间。如果直到2MSL，Client都没有再次收到FIN，那么Client推断ACK已经被成功接收，则结束TCP连接。

【问题3】为什么不能用两次握手进行连接？

答：3次握手完成两个重要的功能，既要双方做好发送数据的准备工作(双方都知道彼此已准备好)，也要允许双方就初始序列号进行协商，这个序列号在握手过程中被发送和确认。

   现在把三次握手改成仅需要两次握手，死锁是可能发生的。作为例子，考虑计算机S和C之间的通信，假定C给S发送一个连接请求分组，S收到了这个分组，并发 送了确认应答分组。按照两次握手的协定，S认为连接已经成功地建立了，可以开始发送数据分组。可是，C在S的应答分组在传输中被丢失的情况下，将不知道S 是否已准备好，不知道S建立什么样的序列号，C甚至怀疑S是否收到自己的连接请求分组。在这种情况下，C认为连接还未建立成功，将忽略S发来的任何数据分 组，只等待连接确认应答分组。而S在发出的分组超时后，重复发送同样的分组。这样就形成了死锁。

【问题4】如果已经建立了连接，但是客户端突然出现故障了怎么办？

TCP还设有一个保活计时器，显然，客户端如果出现故障，服务器不能一直等下去，白白浪费资源。服务器每收到一次客户端的请求后都会重新复位这个计时器，时间通常是设置为2小时，若两小时还没有收到客户端的任何数据，服务器就会发送一个探测报文段，以后每隔75秒钟发送一次。若一连发送10个探测报文仍然没反应，服务器就认为客户端出了故障，接着就关闭连接。(String), https://img-blog.csdn.net/20180717201939345?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4OTUwMzE2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70(String), null, 0(Integer), true(Boolean), false(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-02 21:07:05.274(Timestamp), 2020-11-02 21:07:05.274(Timestamp), 3(Long), 5(String), 1(Long), TCP相关(String)
2020-11-02 21:07:05.612 DEBUG 14836 --- [http-nio-8080-exec-5] com.wjh.blog.mapper.BlogMapper.saveBlog  : <==    Updates: 1
2020-11-02 21:07:05.617 DEBUG 14836 --- [http-nio-8080-exec-5] c.w.b.mapper.BlogMapper.saveBlogAndTag   : ==>  Preparing: insert into blog.t_blog_tags (tag_id, blog_id) values (?,?); 
2020-11-02 21:07:05.618 DEBUG 14836 --- [http-nio-8080-exec-5] c.w.b.mapper.BlogMapper.saveBlogAndTag   : ==> Parameters: 5(Long), 1577879724086(Long)
2020-11-02 21:07:05.622 DEBUG 14836 --- [http-nio-8080-exec-5] c.w.b.mapper.BlogMapper.saveBlogAndTag   : <==    Updates: 1
2020-11-02 21:07:05.796 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.B.getAllBlogQuery_COUNT          : ==>  Preparing: SELECT count(0) FROM blog.t_blog b LEFT OUTER JOIN blog.t_type t ON b.type_id = t.id 
2020-11-02 21:07:05.797 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.B.getAllBlogQuery_COUNT          : ==> Parameters: 
2020-11-02 21:07:05.799 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.B.getAllBlogQuery_COUNT          : <==      Total: 1
2020-11-02 21:07:05.800 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.mapper.BlogMapper.getAllBlogQuery  : ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.type_id,t.id,t.name from blog.t_blog b left outer join blog.t_type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-11-02 21:07:05.801 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.mapper.BlogMapper.getAllBlogQuery  : ==> Parameters: 5(Integer)
2020-11-02 21:07:05.806 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.mapper.BlogMapper.getAllBlogQuery  : <==      Total: 5
2020-11-02 21:07:05.808 DEBUG 14836 --- [http-nio-8080-exec-3] com.wjh.blog.mapper.TypeMapper.listType  : ==>  Preparing: select * from t_type 
2020-11-02 21:07:05.809 DEBUG 14836 --- [http-nio-8080-exec-3] com.wjh.blog.mapper.TypeMapper.listType  : ==> Parameters: 
2020-11-02 21:07:05.810 DEBUG 14836 --- [http-nio-8080-exec-3] com.wjh.blog.mapper.TypeMapper.listType  : <==      Total: 6
2020-11-02 21:07:05.812 DEBUG 14836 --- [http-nio-8080-exec-3] com.wjh.blog.mapper.TagMapper.listTag    : ==>  Preparing: select * from t_tag 
2020-11-02 21:07:05.813 DEBUG 14836 --- [http-nio-8080-exec-3] com.wjh.blog.mapper.TagMapper.listTag    : ==> Parameters: 
2020-11-02 21:07:05.815 DEBUG 14836 --- [http-nio-8080-exec-3] com.wjh.blog.mapper.TagMapper.listTag    : <==      Total: 8
2020-11-02 21:07:07.017  INFO 14836 --- [http-nio-8080-exec-7] com.wjh.blog.aspect.LogAspect            : Request : {url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.wjh.blog.controller.indexController.index', args=[{}, 1]}
2020-11-02 21:07:07.023 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_blog b, blog.t_type t, blog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2020-11-02 21:07:07.024 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==> Parameters: 
2020-11-02 21:07:07.025 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.B.getAllFirstPageBlog_COUNT      : <==      Total: 1
2020-11-02 21:07:07.026 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.t_blog b, blog.t_type t,blog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2020-11-02 21:07:07.026 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==> Parameters: 5(Integer)
2020-11-02 21:07:07.071 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.BlogMapper.getAllFirstPageBlog   : <==      Total: 5
2020-11-02 21:07:07.072 DEBUG 14836 --- [http-nio-8080-exec-7] c.wjh.blog.mapper.TypeMapper.getAllType  : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from blog.t_type t,blog.t_blog b where t.id = b.type_id 
2020-11-02 21:07:07.072 DEBUG 14836 --- [http-nio-8080-exec-7] c.wjh.blog.mapper.TypeMapper.getAllType  : ==> Parameters: 
2020-11-02 21:07:07.075 DEBUG 14836 --- [http-nio-8080-exec-7] c.wjh.blog.mapper.TypeMapper.getAllType  : <==      Total: 12
2020-11-02 21:07:07.076 DEBUG 14836 --- [http-nio-8080-exec-7] com.wjh.blog.mapper.TagMapper.getAllTag  : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from blog.t_tag t,blog.t_blog b, blog.t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2020-11-02 21:07:07.076 DEBUG 14836 --- [http-nio-8080-exec-7] com.wjh.blog.mapper.TagMapper.getAllTag  : ==> Parameters: 
2020-11-02 21:07:07.080 DEBUG 14836 --- [http-nio-8080-exec-7] com.wjh.blog.mapper.TagMapper.getAllTag  : <==      Total: 18
2020-11-02 21:07:07.082 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.BlogMapper.getRecommendedBlog    : ==>  Preparing: select id,title,recommend from blog.t_blog where recommend = true; 
2020-11-02 21:07:07.083 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.BlogMapper.getRecommendedBlog    : ==> Parameters: 
2020-11-02 21:07:07.084 DEBUG 14836 --- [http-nio-8080-exec-7] c.w.b.m.BlogMapper.getRecommendedBlog    : <==      Total: 12
2020-11-02 21:07:07.085  INFO 14836 --- [http-nio-8080-exec-7] com.wjh.blog.aspect.LogAspect            : Result : index
2020-11-02 21:07:07.085  INFO 14836 --- [http-nio-8080-exec-7] com.wjh.blog.aspect.LogAspect            : --------doAfterReturning--------
2020-11-02 21:07:07.085  INFO 14836 --- [http-nio-8080-exec-7] com.wjh.blog.aspect.LogAspect            : --------doAfter--------
2020-11-02 21:07:10.727  INFO 14836 --- [http-nio-8080-exec-8] com.wjh.blog.aspect.LogAspect            : Request : {url='http://127.0.0.1:8080/blog/1577879724086', ip='127.0.0.1', classMethod='com.wjh.blog.controller.indexController.blog', args=[1577879724086, {}]}
2020-11-02 21:07:10.730 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.blog.mapper.BlogMapper.getBlogById   : ==>  Preparing: select * from t_blog where id = ?; 
2020-11-02 21:07:10.731 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.blog.mapper.BlogMapper.getBlogById   : ==> Parameters: 1577879724086(Long)
2020-11-02 21:07:10.735 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.blog.mapper.BlogMapper.getBlogById   : <==      Total: 1
2020-11-02 21:07:10.735 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.b.mapper.BlogMapper.updateBlogViews  : ==>  Preparing: update blog.t_blog set title = ?,content = ? , first_picture = ?, flag = ?, views = ?, appreciation = ?, share_statement = ? , commentabled = ? , published = ? , recommend = ?, create_time = ?, update_time = ? ,type_id = ? ,tag_ids = ? ,user_id = ? ,description = ? where id = ?; 
2020-11-02 21:07:10.737 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.b.mapper.BlogMapper.updateBlogViews  : ==> Parameters: TCP连接和断开(String), ![](http://hi.csdn.net/attachment/201108/7/0_131271823564Rx.gif)

### 三次握手:
**第一次握手：建立连接时，客户端发送syn包（syn=x）到服务器，并进入SYN_SENT状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。

第二次握手：服务器收到syn包，必须确认客户的SYN（ack=x+1），同时自己也发送一个SYN包（syn=y），即SYN+ACK包，此时服务器进入SYN_RECV状态；

第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=y+1），此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。**

### 四次挥手
1）客户端进程发出连接释放报文，并且停止发送数据。释放数据报文首部，FIN=1，其序列号为seq=u（等于前面已经传送过来的数据的最后一个字节的序号加1），此时，客户端进入FIN-WAIT-1（终止等待1）状态。 TCP规定，FIN报文段即使不携带数据，也要消耗一个序号。
2）服务器收到连接释放报文，发出确认报文，ACK=1，ack=u+1，并且带上自己的序列号seq=v，此时，服务端就进入了CLOSE-WAIT（关闭等待）状态。TCP服务器通知高层的应用进程，客户端向服务器的方向就释放了，这时候处于半关闭状态，即客户端已经没有数据要发送了，但是服务器若发送数据，客户端依然要接受。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。
3）客户端收到服务器的确认请求后，此时，客户端就进入FIN-WAIT-2（终止等待2）状态，等待服务器发送连接释放报文（在这之前还需要接受服务器发送的最后的数据）。
4）服务器将最后的数据发送完毕后，就向客户端发送连接释放报文，FIN=1，ack=u+1，由于在半关闭状态，服务器很可能又发送了一些数据，假定此时的序列号为seq=w，此时，服务器就进入了LAST-ACK（最后确认）状态，等待客户端的确认。
5）客户端收到服务器的连接释放报文后，必须发出确认，ACK=1，ack=w+1，而自己的序列号是seq=u+1，此时，客户端就进入了TIME-WAIT（时间等待）状态。注意此时TCP连接还没有释放，必须经过2∗∗MSL（最长报文段寿命）的时间后，当客户端撤销相应的TCB后，才进入CLOSED状态。
6）服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。


#### 常见面试题
【问题1】为什么连接的时候是三次握手，关闭的时候却是四次握手？

答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，"你发的FIN报文我收到了"。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。

【问题2】为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？

答：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假象网络是不可靠的，有可以最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。在Client发送出最后的ACK回复，但该ACK可能丢失。Server如果没有收到ACK，将不断重复发送FIN片段。所以Client不能立即关闭，它必须确认Server接收到了该ACK。Client会在发送出ACK之后进入到TIME_WAIT状态。Client会设置一个计时器，等待2MSL的时间。如果在该时间内再次收到FIN，那么Client会重发ACK并再次等待2MSL。所谓的2MSL是两倍的MSL(Maximum Segment Lifetime)。MSL指一个片段在网络中最大的存活时间，2MSL就是一个发送和一个回复所需的最大时间。如果直到2MSL，Client都没有再次收到FIN，那么Client推断ACK已经被成功接收，则结束TCP连接。

【问题3】为什么不能用两次握手进行连接？

答：3次握手完成两个重要的功能，既要双方做好发送数据的准备工作(双方都知道彼此已准备好)，也要允许双方就初始序列号进行协商，这个序列号在握手过程中被发送和确认。

   现在把三次握手改成仅需要两次握手，死锁是可能发生的。作为例子，考虑计算机S和C之间的通信，假定C给S发送一个连接请求分组，S收到了这个分组，并发 送了确认应答分组。按照两次握手的协定，S认为连接已经成功地建立了，可以开始发送数据分组。可是，C在S的应答分组在传输中被丢失的情况下，将不知道S 是否已准备好，不知道S建立什么样的序列号，C甚至怀疑S是否收到自己的连接请求分组。在这种情况下，C认为连接还未建立成功，将忽略S发来的任何数据分 组，只等待连接确认应答分组。而S在发出的分组超时后，重复发送同样的分组。这样就形成了死锁。

【问题4】如果已经建立了连接，但是客户端突然出现故障了怎么办？

TCP还设有一个保活计时器，显然，客户端如果出现故障，服务器不能一直等下去，白白浪费资源。服务器每收到一次客户端的请求后都会重新复位这个计时器，时间通常是设置为2小时，若两小时还没有收到客户端的任何数据，服务器就会发送一个探测报文段，以后每隔75秒钟发送一次。若一连发送10个探测报文仍然没反应，服务器就认为客户端出了故障，接着就关闭连接。(String), https://img-blog.csdn.net/20180717201939345?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4OTUwMzE2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70(String), null, 1(Integer), true(Boolean), false(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-11-02 21:07:05.0(Timestamp), 2020-11-02 21:07:05.0(Timestamp), 3(Long), 5(String), 1(Long), TCP相关(String), 1577879724086(Long)
2020-11-02 21:07:10.844 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.b.mapper.BlogMapper.updateBlogViews  : <==    Updates: 1
2020-11-02 21:07:10.845 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.b.mapper.BlogMapper.getDetailedBlog  : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar, t.id tid ,t.name from blog.t_blog b,blog.t_user u,blog.t_tag t,blog.t_blog_tags tb where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = t.id and b.id = ? 
2020-11-02 21:07:10.845 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.b.mapper.BlogMapper.getDetailedBlog  : ==> Parameters: 1577879724086(Long)
2020-11-02 21:07:10.848 DEBUG 14836 --- [http-nio-8080-exec-8] c.w.b.mapper.BlogMapper.getDetailedBlog  : <==      Total: 1
2020-11-02 21:07:11.020  INFO 14836 --- [http-nio-8080-exec-8] com.wjh.blog.aspect.LogAspect            : Result : blog
2020-11-02 21:07:11.020  INFO 14836 --- [http-nio-8080-exec-8] com.wjh.blog.aspect.LogAspect            : --------doAfterReturning--------
2020-11-02 21:07:11.020  INFO 14836 --- [http-nio-8080-exec-8] com.wjh.blog.aspect.LogAspect            : --------doAfter--------
2020-11-02 21:07:11.968  INFO 14836 --- [http-nio-8080-exec-3] com.wjh.blog.aspect.LogAspect            : Request : {url='http://127.0.0.1:8080/comments/1577879724086', ip='127.0.0.1', classMethod='com.wjh.blog.controller.CommentController.comments', args=[1577879724086, {}]}
2020-11-02 21:07:11.971 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.C.findByBlogIdParentIdNull       : ==>  Preparing: select * from blog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2020-11-02 21:07:11.971 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.C.findByBlogIdParentIdNull       : ==> Parameters: 1577879724086(Long), -1(Long)
2020-11-02 21:07:12.045 DEBUG 14836 --- [http-nio-8080-exec-3] c.w.b.m.C.findByBlogIdParentIdNull       : <==      Total: 0
2020-11-02 21:07:12.046  INFO 14836 --- [http-nio-8080-exec-3] com.wjh.blog.aspect.LogAspect            : Result : blog :: commentList
2020-11-02 21:07:12.046  INFO 14836 --- [http-nio-8080-exec-3] com.wjh.blog.aspect.LogAspect            : --------doAfterReturning--------
2020-11-02 21:07:12.046  INFO 14836 --- [http-nio-8080-exec-3] com.wjh.blog.aspect.LogAspect            : --------doAfter--------
2020-11-02 21:07:12.823  INFO 14836 --- [http-nio-8080-exec-6] com.wjh.blog.aspect.LogAspect            : Request : {url='http://127.0.0.1:8080/', ip='127.0.0.1', classMethod='com.wjh.blog.controller.indexController.index', args=[{}, 1]}
2020-11-02 21:07:12.827 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_blog b, blog.t_type t, blog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2020-11-02 21:07:12.827 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.B.getAllFirstPageBlog_COUNT      : ==> Parameters: 
2020-11-02 21:07:12.828 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.B.getAllFirstPageBlog_COUNT      : <==      Total: 1
2020-11-02 21:07:12.829 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.t_blog b, blog.t_type t,blog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2020-11-02 21:07:12.830 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.BlogMapper.getAllFirstPageBlog   : ==> Parameters: 5(Integer)
2020-11-02 21:07:12.835 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.BlogMapper.getAllFirstPageBlog   : <==      Total: 5
2020-11-02 21:07:12.839 DEBUG 14836 --- [http-nio-8080-exec-6] c.wjh.blog.mapper.TypeMapper.getAllType  : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from blog.t_type t,blog.t_blog b where t.id = b.type_id 
2020-11-02 21:07:12.839 DEBUG 14836 --- [http-nio-8080-exec-6] c.wjh.blog.mapper.TypeMapper.getAllType  : ==> Parameters: 
2020-11-02 21:07:12.841 DEBUG 14836 --- [http-nio-8080-exec-6] c.wjh.blog.mapper.TypeMapper.getAllType  : <==      Total: 12
2020-11-02 21:07:12.842 DEBUG 14836 --- [http-nio-8080-exec-6] com.wjh.blog.mapper.TagMapper.getAllTag  : ==>  Preparing: select t.id tid,t.name,b.id bid,b.title from blog.t_tag t,blog.t_blog b, blog.t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2020-11-02 21:07:12.842 DEBUG 14836 --- [http-nio-8080-exec-6] com.wjh.blog.mapper.TagMapper.getAllTag  : ==> Parameters: 
2020-11-02 21:07:12.844 DEBUG 14836 --- [http-nio-8080-exec-6] com.wjh.blog.mapper.TagMapper.getAllTag  : <==      Total: 18
2020-11-02 21:07:12.845 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.BlogMapper.getRecommendedBlog    : ==>  Preparing: select id,title,recommend from blog.t_blog where recommend = true; 
2020-11-02 21:07:12.845 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.BlogMapper.getRecommendedBlog    : ==> Parameters: 
2020-11-02 21:07:12.849 DEBUG 14836 --- [http-nio-8080-exec-6] c.w.b.m.BlogMapper.getRecommendedBlog    : <==      Total: 12
2020-11-02 21:07:12.851  INFO 14836 --- [http-nio-8080-exec-6] com.wjh.blog.aspect.LogAspect            : Result : index
2020-11-02 21:07:12.852  INFO 14836 --- [http-nio-8080-exec-6] com.wjh.blog.aspect.LogAspect            : --------doAfterReturning--------
2020-11-02 21:07:12.853  INFO 14836 --- [http-nio-8080-exec-6] com.wjh.blog.aspect.LogAspect            : --------doAfter--------
